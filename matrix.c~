#include<stdio.h>
#include<stdlib.h>
void matmult(int a[10][10],int b[10][10],int m,int n,int o,int p);
void matmult(int a[10][10],int b[10][10],int m,int n,int o,int p)
{
 int i,j,k,c[10][10];
 if(n==o)
 {
  printf("Enter the elements of matrix A row wise\n");
  for(i=0;i<m;i++)
   for(j=0;j<n;j++)
    scanf("%d",&a[i][j]);
  printf("Enter the elements of matrix B row wise\n");
  for(i=0;i<o;i++)
   for(j=0;j<p;j++)
    scanf("%d",&b[i][j]);
  printf("\nThe matrix A is\n");
  for(i=0;i<m;i++)
  {
   for(j=0;j<n;j++)
    printf("%d\t",a[i][j]);
   printf("\n");
  }
  printf("\nThe matrix B is\n");
  for(i=0;i<o;i++)
  {
   for(j=0;j<p;j++)
    printf("%d\t",b[i][j]);
   printf("\n");
  }
  for(i=0;i<m;i++)
   for(j=0;j<p;j++)
    c[i][j]=0;
  for(i=0;i<m;i++)
   for(j=0;j<p;j++)
    for(k=0;k<n;k++)
     c[i][j]+=a[i][k]*b[k][j];
  printf("\nThe matrix C is\n");
  for(i=0;i<m;i++)
  {
   for(j=0;j<p;j++)
    printf("%d\t",c[i][j]);
   printf("\n");
  }
 }
 else
  printf("Matrix multiplication not possible!!!");
}
void trimatrix(int a[10][10],int n);
void trimatrix(int a[10][10],int n)
{
 int i,j,up=0,lw=0;
 for(i=0;i<n;i++)
  for(j=0;j<n;j++)
  {
   if(i>j&&a[i][j]!=0)
    up=1;
   if(i<j&&a[i][j]!=0)
    lw=1;
  }
 if(up==0&&lw==0)
  printf("The matrix is diagonal matrix");
 else if(up==0)
  printf("The matrix is upper triangled");
 else if(lw==0)
  printf("The matrix is lower triangled");
 else
  printf("The matrix is regular matrix");
}
void saddle(int a[10][10],int m,int n);
void saddle(int a[10][10],int m,int n)
{
 int i,j,k,l,hr,hc,lr,lc;
 printf("Enter the number of rows and columns of the matrix ");
 scanf("%d %d",&m,&n);
 printf("Enter the elements\n");
 for(i=0;i<m;i++)
  for(j=0;j<n;j++)
   scanf("%d",&a[i][j]);
 printf("\nThe matrix is\n");
 for(i=0;i<m;i++)
 {
  for(j=0;j<n;j++)
   printf("%d\t",a[i][j]);
  printf("\n");
 }
 printf("The saddle ponts in the matrix are at\n");
 for(i=0;i<m;i++)
  for(j=0;j<n;j++)
  {
   hr=a[i][0];
   lr=a[i][0];
   hc=a[0][j];
   lc=a[0][j];
   for(k=0;k<m;k++)
   {
    if(a[k][j]>hc)
     hc=a[k][j];
    if(a[k][j]<lc)
     lc=a[k][j];
   }
   for(l=0;l<n;l++)
   {
    if(a[i][l]>hr)
     hr=a[i][l];
    if(a[i][l]<lr)
     lr=a[i][l];
   }
   if((a[i][j]==hr&&a[i][j]==lc)||(a[i][j]==hc&&a[i][j]==lr))
    printf("%d %d\n",i+1,j+1);
  }
}
void identity(int a[10][10],int n);
void identity(int a[10][10],int n)
{
 int i,j,id=0,di=0;
 for(i=0;i<n;i++)
  for(j=0;j<n;j++)
  {
   if(i!=j&&a[i][j]!=0)
    di=1;
   if(i==j&&a[i][j]!=1)
    id=1;
  }
 if(!di)
 {
  if(!id)
   printf("The matrix is identity matrix");
  else
   printf("The matrix is diagonal matrix");
 }
 else
  printf("The matrix is ordinary matrix");
}
void reverse(int a[10],int n);
void reverse(int a[10],int n)
{
 int i;
 for(i=0;i<(n/2);i++)
 {
  a[i]=a[i]+a[n-i-1];
  a[n-i-1]=a[i]-a[n-i-1];
  a[i]=a[i]-a[n-i-1];
 }
}
void matrix();
void matrix()
{
 int opt,yes=1;
 do
 {
  printf("1. Matrix multiplication\n2. Check whether matrix is upper or lower triangular\n3. Check whether saddle point exists\n4. Check whether matrix is identity or diagonal\n5. Reverse the elements of an array\n6. Go ba\nChoose an option.. ");
  scanf("%d",&opt);
  switch(opt)
  {
   case 1:{
           int a[10][10],b[10][10],m,n,o,p;
           printf("Enter the rows and columns of matrix A ");
	   scanf("%d %d",&m,&n);
	   printf("Enter the rows and columns of matrix B ");
           scanf("%d %d",&o,&p);
	   matmult(a,b,m,n,o,p);
	   break;
	  }
   case 2:{
	   int a[10][10],n,i,j;
	   printf("Enter the order of the matrix ");
	   scanf("%d",&n);
	   printf("Enter the elements\n");
	   for(i=0;i<n;i++)
	    for(j=0;j<n;j++)
	     scanf("%d",&a[i][j]);
	   printf("\nThe matrix is\n");
	   for(i=0;i<n;i++)
	   {
		for(j=0;j<n;j++)
			printf("%d\t",a[i][j]);
		printf("\n");
	   }
	   trimatrix(a,n);
	   break;
	  }
   case 3:{
	   int a[10][10],m,n,i,j;
	   printf("Enter the number of rows and columns of the matrix ");
	   scanf("%d %d",&m,&n);
	   printf("Enter the elements\n");
	   for(i=0;i<m;i++)
	    for(j=0;j<n;j++)
	     scanf("%d",&a[i][j]);
	    printf("\nThe matrix is\n");
	    for(i=0;i<m;i++)
	    {
	     for(j=0;j<n;j++)
	      printf("%d\t",a[i][j]);
	     printf("\n");
	    }
	    saddle(a,m,n);
	    break;
	   }
   case 4:{
           int a[10][10],n,i,j;
	   printf("Enter the order of the matrix ");
	   scanf("%d",&n);
	   printf("Enter the elements\n");
	   for(i=0;i<n;i++)
	    for(j=0;j<n;j++)
	     scanf("%d",&a[i][j]);
	   printf("\nThe matrix is\n");
	   for(i=0;i<n;i++)
	   {
		for(j=0;j<n;j++)
			printf("%d\t",a[i][j]);
		printf("\n");
	   }
	   identity(a,n);
	   break;
	  }
   case 5:{
           int a[10],i,n;
           printf("Enter the size of the array ");
           scanf("%d",&n);
           printf("Enter the elements\n");
           for(i=0;i<n;i++)
            scanf("%d",&a[i]);
           printf("The array is\n");
           for(i=0;i<n;i++)
            printf("%d\t",a[i]);
           reverse(a,n);
           printf("\nThe reversed array is\n");
           for(i=0;i<n;i++)
            printf("%d\t",a[i]);
           break;
          }
   case 6:yes=0;
  }
 }while(yes);
}
